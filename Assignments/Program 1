#include <iostream>

using namespace std;

class Vector {
private:
  int *array;
  int index;
  int size;

  bool Full();              // array has all slots filled
  bool Empty();             // array is empty
  void Resize();            // grow array

public:
  Vector();                 // default constructor
  Vector(int);              // specify vector size
  Vector(const Vector &);   // copy constructor
  Vector(int *, int);       // create vector given array of items

  void Push(int);           // add item to vector
  int Pop();                // remove item from vector
  void Print();             // print the vector
  void PushAt(int, int);    // push value at specific location

  friend ostream &operator<<(ostream &, const Vector &);
  Vector operator+(const Vector &);
  int& operator[](int i);
};

bool Vector::Full() { return index == (size - 1); }


int Vector::Pop(){
  index--;
  return array[index];
}

void Vector::Push(int item) {
  if (Full()) {
    Resize();
  }

  array[index] = item;
  index++;
}

void Vector::PushAt(int index, int val) { array[index] = val; }


void Vector::Print() {
  for (int i = 0; i < index; i++) {
    cout << array[i] << " ";
  }
}
